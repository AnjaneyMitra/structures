"""add_user_preferences

Revision ID: 1e624225a14a
Revises: 40cba1ae9ee3
Create Date: 2025-07-24 08:42:12.803178

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e624225a14a'
down_revision: Union[str, Sequence[str], None] = '40cba1ae9ee3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Add user preferences fields with proper defaults."""
    # Get database connection to check which database we're using
    connection = op.get_bind()
    
    # Check database type
    if connection.dialect.name == 'postgresql':
        # Use PostgreSQL-specific syntax
        op.execute("""
            DO $$ 
            BEGIN 
                -- Add theme_preference column if it doesn't exist
                IF NOT EXISTS (
                    SELECT 1 FROM information_schema.columns 
                    WHERE table_name = 'users' AND column_name = 'theme_preference'
                ) THEN
                    ALTER TABLE users ADD COLUMN theme_preference VARCHAR;
                END IF;
                
                -- Add font_size column if it doesn't exist
                IF NOT EXISTS (
                    SELECT 1 FROM information_schema.columns 
                    WHERE table_name = 'users' AND column_name = 'font_size'
                ) THEN
                    ALTER TABLE users ADD COLUMN font_size VARCHAR;
                END IF;
            END $$;
        """)
    else:
        # Use standard Alembic operations for SQLite and other databases
        op.add_column('users', sa.Column('theme_preference', sa.String(), nullable=True))
        op.add_column('users', sa.Column('font_size', sa.String(), nullable=True))
    
    # Set default values for existing users (works for all databases)
    op.execute("UPDATE users SET theme_preference = 'light' WHERE theme_preference IS NULL")
    op.execute("UPDATE users SET font_size = 'medium' WHERE font_size IS NULL")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'font_size')
    op.drop_column('users', 'theme_preference')
    # ### end Alembic commands ###
